import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        google()
        mavenLocal()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${project.'kotlin.version'}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${project.'kotlin.version'}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${project.'spring.boot.version'}")

        classpath("net.ltgt.gradle:gradle-errorprone-plugin:${project.'errorprone.plugin.version'}")
        classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:${project.'spotbugs.plugin.version'}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${project.'sonarqube.plugin.version'}")
        classpath("gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:${project.'google.javaformat.version'}")
        classpath("com.netflix.nebula:nebula-release-plugin:${project.'nebula.release.version'}")
    }
}

apply plugin: 'nebula.release'
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "$rootDir/gradle/testCoverage.gradle"

allprojects {
    group 'io.boonlogic'

    repositories {
        jcenter()
        mavenLocal()
    }
}

subprojects {

    if (it.name != 'soul-land-web-frontend') {

        apply from: "$rootDir/gradle/kotlin.gradle"
        apply from: "$rootDir/gradle/java.gradle"
        apply from: "$rootDir/gradle/test.gradle"

        plugins.withType(SpringBootPlugin) {
            springBoot {
                buildInfo {
                    def infoProps = [
                        'name': shortName(project.name),
                        'artifact': project.name
                    ]
                    if(project.description != null) {
                        infoProps.put('description', project.description)
                    }
                    additionalProperties = infoProps
                }
            }

            dependencyManagement {
                imports {
                    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${project.'spring.cloud.version'}"
                }
            }
        }

        jar {
            baseName = shortName(project.name)
        }
    }
}

task wrapper(type: Wrapper, description: "Update the Gradle wrapper") {
    gradleVersion = project."gradle.version"
}

def static final shortName(String name) {
    if(name.lastIndexOf('.') != -1 &&
            name.length() > name.lastIndexOf('.') + 2) {
        return name.substring(name.lastIndexOf('.') + 1)
    }
    return name
}

defaultTasks ":soul-land-web-frontend:build", "build"
