//apply plugin: "com.github.sherter.google-java-format"
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

findbugs {
    toolVersion = "3.0.1"
    ignoreFailures = false
    effort = "max"
    reportLevel = "low"
    excludeFilter = rootProject.file('gradle/config/findbugs-filter.xml') as File
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task findSecurityBugs(type: FindBugs) {

    classes = fileTree(project.rootDir.absolutePath).include("**/*.class")
    source = fileTree(project.rootDir.absolutePath).include("**/*.java")
    source += fileTree(project.rootDir.absolutePath).include("**/*.kt")
    classpath = files()
//    classpath += project.configurations.provided
    pluginClasspath = project.configurations.findbugsPlugins

    findbugs {
        toolVersion = "3.0.1"
        sourceSets = [sourceSets.main]
        ignoreFailures = true
        reportsDir = file("$project.buildDir/findbugsReports")
        effort = "max"
        reportLevel = "low"
        includeFilter = file("$rootDir/gradle/config/findbugs-sec.xml")
//        excludeFilter = file("$rootProject.projectDir/fsb-exclude.xml")
    }
}

dependencies {
    findbugs 'com.google.code.findbugs:findbugs:3.0.1'
    findbugs configurations.findbugsPlugins.dependencies
    findbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}


pmd {
    toolVersion = "6.1.0"
    ignoreFailures = false
    ruleSetFiles = files("$rootDir/gradle/config/pmd.xml")
    ruleSets = []
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

afterEvaluate {

    checkstyle {
        toolVersion = "8.8"
//        config = resources.text.fromArchiveEntry(configurations.checkstyle[0], 'google_checks.xml')
        configFile = rootProject.file('gradle/config/google_checks.xml') as File
        maxErrors = 0
        maxWarnings = 0
        ignoreFailures = true
        showViolations = true
    }
//    check.dependsOn(verifyGoogleJavaFormat)
}




